! HiPart is a software toolkit to analyse molecular densities with the hirshfeld partitioning scheme.
! Copyright (C) 2007 - 2010 Toon Verstraelen <Toon.Verstraelen@UGent.be>
!
! This file is part of HiPart.
!
! HiPart is free software; you can redistribute it and/or
! modify it under the terms of the GNU General Public License
! as published by the Free Software Foundation; either version 3
! of the License, or (at your option) any later version.
!
! HiPart is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License
! along with this program; if not, see <http://www.gnu.org/licenses/>
!
! --

python module gint_ext
interface

include 'gint1_fn.pyf.inc'
include 'gint2_nai.pyf.inc'

  double precision function gaux(T, n)
    intent(c) gaux
    intent(c)
    double precision intent(in) :: T
    integer intent(int) :: n
  end function gaux

  integer function reorder_dmat_c(dmat, permutation, num_dof)
    intent(c) reorder_dmat_c
    intent(c)
    double precision intent(inout) :: dmat((num_dof*(num_dof+1))/2)
    integer intent(int) :: permutation(num_dof)
    integer intent(hide), depend(permutation) :: num_dof=len(permutation)
  end function reorder_dmat_c

  integer function add_orbitals_to_dmat(orbitals, dmat, num_orbitals, num_dof)
    intent(c) add_orbitals_to_dmat
    intent(c)
    double precision intent(in) :: orbitals(num_orbitals,num_dof)
    double precision intent(inout) :: dmat((num_dof*(num_dof+1))/2)
    integer intent(hide), depend(orbitals) :: num_orbitals=shape(orbitals,0)
    integer intent(hide), depend(orbitals) :: num_dof=shape(orbitals,1)
  end function add_orbitals_to_dmat

end interface
end python module gint_ext
